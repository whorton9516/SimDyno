using static DataReceiver.Helpers.PacketParser;

namespace DataReceiver.Helpers;
public static class ForzaFormatter
{
    // Sled
    public static bool IsRaceOn(this byte[] bytes) => GetSingle(bytes, 0) > 0;
    public static uint TimestampMs(this byte[] bytes) => GetUInt32(bytes, 4);
    public static float EngineMaxRpm(this byte[] bytes) => GetSingle(bytes, 8);
    public static float EngineIdleRpm(this byte[] bytes) => GetSingle(bytes, 12);
    public static float CurrentEngineRpm(this byte[] bytes) => GetSingle(bytes, 16);
    public static float AccelerationX(this byte[] bytes) => GetSingle(bytes, 20);
    public static float AccelerationY(this byte[] bytes) => GetSingle(bytes, 24);
    public static float AccelerationZ(this byte[] bytes) => GetSingle(bytes, 28);
    public static float VelocityX(this byte[] bytes) => GetSingle(bytes, 32);
    public static float VelocityY(this byte[] bytes) => GetSingle(bytes, 36);
    public static float VelocityZ(this byte[] bytes) => GetSingle(bytes, 40);
    public static float AngularVelocityX(this byte[] bytes) => GetSingle(bytes, 44);
    public static float AngularVelocityY(this byte[] bytes) => GetSingle(bytes, 48);
    public static float AngularVelocityZ(this byte[] bytes) => GetSingle(bytes, 52);
    public static float Yaw(this byte[] bytes) => GetSingle(bytes, 56);
    public static float Pitch(this byte[] bytes) => GetSingle(bytes, 60);
    public static float Roll(this byte[] bytes) => GetSingle(bytes, 64);
    public static float NormalizedSuspensionTravelFL(this byte[] bytes) => GetSingle(bytes, 68);
    public static float NormalizedSuspensionTravelFR(this byte[] bytes) => GetSingle(bytes, 72);
    public static float NormalizedSuspensionTravelRL(this byte[] bytes) => GetSingle(bytes, 76);
    public static float NormalizedSuspensionTravelRR(this byte[] bytes) => GetSingle(bytes, 80);
    public static float TireSlipRatioFL(this byte[] bytes) => GetSingle(bytes, 84);
    public static float TireSlipRatioFR(this byte[] bytes) => GetSingle(bytes, 88);
    public static float TireSlipRatioRL(this byte[] bytes) => GetSingle(bytes, 92);
    public static float TireSlipRatioRR(this byte[] bytes) => GetSingle(bytes, 96);
    public static float WheelRotationSpeedFL(this byte[] bytes) => GetSingle(bytes, 100);
    public static float WheelRotationSpeedFR(this byte[] bytes) => GetSingle(bytes, 104);
    public static float WheelRotationSpeedRL(this byte[] bytes) => GetSingle(bytes, 108);
    public static float WheelRotationSpeedRR(this byte[] bytes) => GetSingle(bytes, 112);
    public static float WheelOnRumbleStripFL(this byte[] bytes) => GetSingle(bytes, 116);
    public static float WheelOnRumbleStripFR(this byte[] bytes) => GetSingle(bytes, 120);
    public static float WheelOnRumbleStripRL(this byte[] bytes) => GetSingle(bytes, 124);
    public static float WheelOnRumbleStripRR(this byte[] bytes) => GetSingle(bytes, 128);
    public static float WheelInPuddleFL(this byte[] bytes) => GetSingle(bytes, 132);
    public static float WheelInPuddleFR(this byte[] bytes) => GetSingle(bytes, 136);
    public static float WheelInPuddleRL(this byte[] bytes) => GetSingle(bytes, 140);
    public static float WheelInPuddleRR(this byte[] bytes) => GetSingle(bytes, 144);
    public static float SurfaceRumbleFL(this byte[] bytes) => GetSingle(bytes, 148);
    public static float SurfaceRumbleFR(this byte[] bytes) => GetSingle(bytes, 152);
    public static float SurfaceRumbleRR(this byte[] bytes) => GetSingle(bytes, 156);
    public static float SurfaceRumbleRL(this byte[] bytes) => GetSingle(bytes, 160);
    public static float TireSlipAngleFL(this byte[] bytes) => GetSingle(bytes, 164);
    public static float TireSlipAngleFR(this byte[] bytes) => GetSingle(bytes, 168);
    public static float TireSlipAngleRL(this byte[] bytes) => GetSingle(bytes, 172);
    public static float TireSlipAngleRR(this byte[] bytes) => GetSingle(bytes, 176);
    public static float TireCombinedSlipFL(this byte[] bytes) => GetSingle(bytes, 180);
    public static float TireCombinedSlipFR(this byte[] bytes) => GetSingle(bytes, 184);
    public static float TireCombinedSlipRL(this byte[] bytes) => GetSingle(bytes, 188);
    public static float TireCombinedSlipRR(this byte[] bytes) => GetSingle(bytes, 192);
    public static float SuspensionTravelMetersFL(this byte[] bytes) => GetSingle(bytes, 196);
    public static float SuspensionTravelMetersFR(this byte[] bytes) => GetSingle(bytes, 200);
    public static float SuspensionTravelMetersRL(this byte[] bytes) => GetSingle(bytes, 204);
    public static float SuspensionTravelMetersRR(this byte[] bytes) => GetSingle(bytes, 208);
    public static uint CarOrdinal(this byte[] bytes) => GetUInt8(bytes, 212);
    public static uint CarClass(this byte[] bytes) => GetUInt8(bytes, 216);
    public static uint CarPerformanceIndex(this byte[] bytes) => GetUInt8(bytes, 220);
    public static uint DriveTrain(this byte[] bytes) => GetUInt8(bytes, 224);
    public static uint NumCylinders(this byte[] bytes) => GetUInt8(bytes, 228);

    // Dash
    public static float PositionX(this byte[] bytes) => GetSingle(bytes, 232);
    public static float PositionY(this byte[] bytes) => GetSingle(bytes, 236);
    public static float PositionZ(this byte[] bytes) => GetSingle(bytes, 240);
    public static float Speed(this byte[] bytes) => GetSingle(bytes, 244);
    public static float Power(this byte[] bytes) => MathF.Round(GetSingle(bytes, 248) * 0.00134102f);
    public static float Torque(this byte[] bytes) => MathF.Round(GetSingle(bytes, 252));
    public static float TireTempFL(this byte[] bytes) => GetSingle(bytes, 256);
    public static float TireTempFR(this byte[] bytes) => GetSingle(bytes, 260);
    public static float TireTempRL(this byte[] bytes) => GetSingle(bytes, 264);
    public static float TireTempRR(this byte[] bytes) => GetSingle(bytes, 268);
    public static float Boost(this byte[] bytes) => GetSingle(bytes, 272);
    public static float Fuel(this byte[] bytes) => GetSingle(bytes, 276);
    public static float Distance(this byte[] bytes) => GetSingle(bytes, 280);
    public static float BestLapTime(this byte[] bytes) => GetSingle(bytes, 284);
    public static float LastLapTime(this byte[] bytes) => GetSingle(bytes, 288);
    public static float CurrentLapTime(this byte[] bytes) => GetSingle(bytes, 292);
    public static float CurrentRaceTime(this byte[] bytes) => GetSingle(bytes, 296);
    public static uint LapNumber(this byte[] bytes) => GetUInt16(bytes, 300);
    public static uint RacePosition(this byte[] bytes) => GetUInt8(bytes, 302);
    public static uint Accelerator(this byte[] bytes) => GetUInt8(bytes, 303) * 100 / 255;
    public static uint Brake(this byte[] bytes) => GetUInt8(bytes, 304) * 100 / 255;
    public static uint Clutch(this byte[] bytes) => GetUInt8(bytes, 305) * 100 / 255;
    public static uint Handbrake(this byte[] bytes) => GetUInt8(bytes, 306) * 100 / 255;
    public static uint Gear(this byte[] bytes) => GetUInt8(bytes, 307);
    public static int Steer(this byte[] bytes) => GetInt8(bytes, 308) * 100 / 127;
    public static uint NormalizedDrivingLine(this byte[] bytes) => GetUInt8(bytes, 309);
    public static uint NormalizedAiBrakeDifference(this byte[] bytes) => GetUInt8(bytes, 310);
    public static float TireWearFL(this byte[] bytes) => GetSingle(bytes, 314);
    public static float TireWearFR(this byte[] bytes) => GetSingle(bytes, 318);
    public static float TireWearRL(this byte[] bytes) => GetSingle(bytes, 322);
    public static float TireWearRR(this byte[] bytes) => GetSingle(bytes, 326);
    public static int TrackOrdinal(this byte[] bytes) => GetInt8(bytes, 330);
}
